/*
Deployment script for WEventData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WEventData"
:setvar DefaultFilePrefix "WEventData"
:setvar DefaultDataPath "C:\Users\peter\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\peter\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Account]...';


GO
ALTER TABLE [dbo].[Account] DROP CONSTRAINT [DF__Account__Online__239E4DCF];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Event]...';


GO
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [DF__Event__Public__300424B4];


GO
PRINT N'Starting rebuilding table [dbo].[Account]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Account] (
    [UID]      INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (100) NOT NULL,
    [Email]    NVARCHAR (100) NOT NULL,
    [Password] NVARCHAR (100) NOT NULL,
    [DID]      INT            NOT NULL,
    [Online]   BIT            DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([UID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Account])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Account] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Account] ([UID], [Name], [Email], [Password], [DID], [Online])
        SELECT   [UID],
                 [Name],
                 [Email],
                 [Password],
                 [DID],
                 [Online]
        FROM     [dbo].[Account]
        ORDER BY [UID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Account] OFF;
    END

DROP TABLE [dbo].[Account];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Account]', N'Account';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Department]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Department] (
    [DID]        INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50)  NOT NULL,
    [CompanyKey] NVARCHAR (150) NULL,
    PRIMARY KEY CLUSTERED ([DID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Department])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Department] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Department] ([DID], [Name], [CompanyKey])
        SELECT   [DID],
                 [Name],
                 [CompanyKey]
        FROM     [dbo].[Department]
        ORDER BY [DID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Department] OFF;
    END

DROP TABLE [dbo].[Department];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Department]', N'Department';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Event]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Event] (
    [EID]      INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (200) NOT NULL,
    [StarDate] DATETIME       NOT NULL,
    [EndDate]  DATETIME       NOT NULL,
    [PID]      INT            NOT NULL,
    [UID]      INT            NOT NULL,
    [Public]   BIT            DEFAULT 1 NOT NULL,
    PRIMARY KEY CLUSTERED ([EID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Event])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Event] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Event] ([EID], [Name], [StarDate], [EndDate], [PID], [UID], [Public])
        SELECT   [EID],
                 [Name],
                 [StarDate],
                 [EndDate],
                 [PID],
                 [UID],
                 [Public]
        FROM     [dbo].[Event]
        ORDER BY [EID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Event] OFF;
    END

DROP TABLE [dbo].[Event];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Event]', N'Event';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EventAccount]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EventAccount] (
    [EUID]   INT            IDENTITY (1, 1) NOT NULL,
    [EID]    INT            NULL,
    [Status] NVARCHAR (50)  NULL,
    [Note]   NVARCHAR (250) NULL,
    [UID]    INT            NULL,
    PRIMARY KEY CLUSTERED ([EUID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EventAccount])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EventAccount] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EventAccount] ([EUID], [EID], [Status], [Note], [UID])
        SELECT   [EUID],
                 [EID],
                 [Status],
                 [Note],
                 [UID]
        FROM     [dbo].[EventAccount]
        ORDER BY [EUID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EventAccount] OFF;
    END

DROP TABLE [dbo].[EventAccount];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EventAccount]', N'EventAccount';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EventComment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EventComment] (
    [ECID]        INT            IDENTITY (1, 1) NOT NULL,
    [UID]         INT            NOT NULL,
    [Comment]     NVARCHAR (300) NOT NULL,
    [CommentDate] DATETIME       NOT NULL,
    [EID]         INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([ECID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EventComment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EventComment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EventComment] ([ECID], [UID], [Comment], [CommentDate], [EID])
        SELECT   [ECID],
                 [UID],
                 [Comment],
                 [CommentDate],
                 [EID]
        FROM     [dbo].[EventComment]
        ORDER BY [ECID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EventComment] OFF;
    END

DROP TABLE [dbo].[EventComment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EventComment]', N'EventComment';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EventLog]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EventLog] (
    [ELID]      INT           IDENTITY (1, 1) NOT NULL,
    [EID]       INT           NOT NULL,
    [UID]       INT           NOT NULL,
    [Status]    NVARCHAR (50) NOT NULL,
    [TimeStamp] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([ELID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EventLog])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EventLog] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EventLog] ([ELID], [EID], [UID], [Status], [TimeStamp])
        SELECT   [ELID],
                 [EID],
                 [UID],
                 [Status],
                 [TimeStamp]
        FROM     [dbo].[EventLog]
        ORDER BY [ELID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EventLog] OFF;
    END

DROP TABLE [dbo].[EventLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EventLog]', N'EventLog';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Place]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Place] (
    [PID]      INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (100) NOT NULL,
    [Address]  NVARCHAR (300) NOT NULL,
    [ImageURI] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([PID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Place])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Place] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Place] ([PID], [Name], [Address], [ImageURI])
        SELECT   [PID],
                 [Name],
                 [Address],
                 [ImageURI]
        FROM     [dbo].[Place]
        ORDER BY [PID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Place] OFF;
    END

DROP TABLE [dbo].[Place];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Place]', N'Place';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
MERGE INTO Account AS Target 
USING (VALUES 
        (1, 'A', 'qq1@gmail.com', 'password1',1,0), 
        (2, 'B', 'qq2@gmail.com', 'password2',1,0), 
        (3, 'C', 'qq3@gmail.com', 'password3',1,0)
) 
AS Source (UID, Name, Email, Password, DID, Online) 
ON Target.UID = Source.UID 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (UID,Name, Email, Password, DID, Online) 
VALUES (UID,Name, Email, Password, DID, Online);

MERGE INTO Department AS Target
USING (VALUES 
        (1, 'Software Development', 'WEventTeam'), 
        (2, 'QA', 'WEventTeam'), 
		(3, 'SA', 'WEventTeam')
)
AS Source (DID,Name,CompanyKey)
ON Target.DID = Source.DID
WHEN NOT MATCHED BY TARGET THEN
INSERT (DID,Name,CompanyKey)
VALUES (DID,Name,CompanyKey);

GO

GO
PRINT N'Update complete.';


GO
